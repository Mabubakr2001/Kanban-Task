@use "../variables/colors" as c;
@use "../variables/transitions" as t;
@use "../globals/functions" as *;

header {
  position: fixed;
  top: 0;
  background-color: map-get(c.$colors, main_2);
  color: map-get(c.$colors, blackColor);
  @at-root body[data-mode="dark"] & {
    color: map-get(c.$colors, main_2);
    background-color: map-get(c.$colors, sub);
  }
  display: flex;
  align-items: center;
  height: rem(77px);
  width: 100vw;
  .logo-info {
    display: flex;
    align-items: center;
    width: rem(245px);
    height: 100%;
    padding-left: rem(20px);
    @media (300px <= width <= 767px) {
      & {
        flex: 1;
      }
    }
    @at-root body[data-mode="dark"] & {
      border-right: 1px solid #3e3f4e;
    }
    @at-root body[data-mode="light"] & {
      border-right: 1px solid #e2e2e2;
    }
    > {
      div {
        margin: {
          top: -2px;
          right: 10px;
          bottom: 0;
          left: 0;
        }
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: rem(30px);
        min-width: rem(30px);
        > {
          div {
            height: inherit;
            width: 8px;
            border-radius: 5px;
            background-color: map-get(c.$colors, main);
          }
          div:nth-child(2) {
            opacity: 0.8;
          }
          div:last-child {
            opacity: 0.6;
          }
        }
      }
      h1 {
        font-size: rem(28px);
        font-weight: 700;
        @media (300px <= width <= 767px) {
          & {
            width: fit-content;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
          }
        }
      }
    }
    .open-arrow {
      display: none;
      fill: map-get(c.$colors, main);
      transition: 0.2s;
      &[data-state="negative"] {
        transform: rotate(-180deg);
      }
      &[data-state="positive"] {
        transform: rotate(0deg);
      }
    }
    @media (300px <= width <= 767px) {
      & {
        width: rem(220px);
        border-right: none !important;
        .open-arrow {
          display: block;
          margin: 5px 0 0 7px;
          pointer-events: all;
          user-select: all;
          cursor: pointer;
          path {
            pointer-events: none;
            user-select: none;
          }
        }
      }
    }
  }
  .board-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex: 1;
    @media (300px <= width <= 767px) {
      & {
        flex: none;
        width: 40%;
      }
    }
    padding: {
      top: 15px;
      bottom: 15px;
      right: 20px;
      left: 20px;
    }
    h2 {
      font-size: rem(22px);
      // @media (300px <= width <= 767px) {
      //   & {
      //     display: none;
      //   }
      // }
    }
    .board-manipulation {
      display: flex;
      align-items: center;
      margin-left: auto;
      @at-root .add-btn {
        background-color: map-get(c.$colors, main);
        border-radius: 20px;
        display: flex;
        align-items: center;
        padding: rem(12px) rem(20px);
        color: map-get(c.$colors, main_2);
        transition: t.$mainTransition;
        @at-root body[data-mode="dark"] &:hover {
          background-color: map-get(c.$colors, main_2);
          color: map-get(c.$colors, main);
          svg {
            fill: map-get(c.$colors, main);
          }
        }
        @at-root body[data-mode="light"] &:hover {
          background-color: map-get(c.$colors, sub);
        }
        h3 {
          font-size: rem(18px);
          font-weight: 700;
        }
      }
      @at-root .manipulating-spot {
        width: rem(6px);
        height: rem(24px);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        margin-left: rem(25px);
        cursor: pointer;
        > div {
          width: inherit;
          height: 6px;
          border-radius: 50%;
          background-color: map-get(c.$colors, sub_2);
        }
      }
    }
  }
}
