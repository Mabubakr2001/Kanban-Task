@use "../variables/transitions" as t;
@use "../variables/colors" as c;
@use "../globals/functions" as *;
@use "sass:math";

%rounded-shape {
  width: 92%;
  height: rem(47px);
  border-radius: 0 25px 25px 0;
  display: flex;
  align-items: center;
  font-size: rem(18px);
  font-weight: 600;
  > {
    svg {
      margin: 0 2px 0 3px;
    }
  }
}

.board-creation {
  height: calc(100vh - 77px);
  width: 0;
  padding: rem(15px) 0;
  overflow: hidden;
  @at-root &[data-state="visible"] {
    display: flex;
    flex-direction: column;
    width: rem(245px);
  }
  @at-root &[data-state="hidden"] {
    display: none;
  }
  @at-root body[data-mode="dark"] & {
    background-color: map-get(c.$colors, sub);
    border-right: 1px solid #3e3f4e;
    border-top: 1px solid #3e3f4e;
  }
  @at-root body[data-mode="light"] & {
    border-right: 1px solid #e2e2e2;
    border-top: 1px solid #e2e2e2;
  }
  > {
    p {
      margin: 0 0 rem(20px) rem(20px);
      color: #828d9c;
      text-transform: uppercase;
      letter-spacing: 1px;
      font-size: rem(14px);
      font-weight: 600;
    }
  }
  .all-boards {
    min-height: fit-content;
    max-height: rem(400px);
    overflow-y: scroll;
    @at-root &::-webkit-scrollbar {
      width: 12px;
      border-radius: 15px;
    }
    @at-root &::-webkit-scrollbar-thumb {
      border-radius: 15px;
      background-color: map-get(c.$colors, main);
    }
    .created-board-name {
      @extend %rounded-shape;
      transition: t.$mainTransition;
      @at-root &:not(:last-child) {
        margin-bottom: 1px;
      }
      color: map-get(c.$colors, main);
      cursor: pointer;
      @at-root &[data-state="active"] {
        background-color: map-get(c.$colors, main);
        color: map-get(c.$colors, main_2);
      }
      @at-root body[data-mode="dark"] &:not([data-state="active"]) {
        &:hover {
          background-color: map-get(c.$colors, main_2);
          color: map-get(c.$colors, main);
        }
      }
      @at-root body[data-mode="light"] &:not([data-state="active"]) {
        &:hover {
          background-color: map-get(c.$colors, sub);
          color: map-get(c.$colors, main_2);
        }
      }
      h3 {
        font-size: rem(18px);
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        margin-right: rem(10px);
      }
      svg {
        margin: -2px 10px 0 7px;
        pointer-events: none;
        user-select: none;
      }
    }
  }
  .board-creation-btn {
    @extend %rounded-shape;
    transition: t.$mainTransition;
    margin-top: 1px;
    width: calc(92% - 12px);
    @at-root body[data-mode="dark"] & {
      background-color: map-get(c.$colors, main);
      color: map-get(c.$colors, main_2);
      svg {
        fill: map-get(c.$colors, main_2);
      }
      &:hover {
        background-color: map-get(c.$colors, main_2);
        color: map-get(c.$colors, main);
        svg {
          fill: map-get(c.$colors, main);
        }
      }
    }
    @at-root body[data-mode="light"] & {
      background-color: map-get(c.$colors, main);
      color: map-get(c.$colors, main_2);
      &:hover {
        background-color: map-get(c.$colors, sub);
      }
      svg {
        fill: map-get(c.$colors, main_2);
      }
    }
  }
  .dark-mode {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 7px;
    background-color: map-get(c.$colors, sub_3);
    width: 88%;
    height: rem(41px);
    margin: auto auto rem(15px);
    .toggle-mode {
      width: rem(40px);
      height: rem(20px);
      border-radius: 15px;
      background-color: map-get(c.$colors, main);
      margin: 0 rem(25px);
      position: relative;
      cursor: pointer;
      transition: t.$mainTransition;
      @at-root &:hover {
        background-color: #9f84ff;
      }
      > div {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        height: rem(14px);
        width: rem(14px);
        border-radius: 50%;
        transition: t.$mainTransition;
        background-color: map-get(c.$colors, main_2);
        pointer-events: none;
        user-select: none;
      }
      @at-root &[data-current-mode="light"] {
        > div {
          left: 3px;
        }
      }
      @at-root &[data-current-mode="dark"] {
        > div {
          right: 3px;
        }
      }
    }
  }
  .hide-sidebar-btn {
    @extend %rounded-shape;
    transition: t.$mainTransition;
    svg {
      margin: -2px rem(10px) 0 rem(7px);
      pointer-events: none;
      user-select: none;
    }
    @at-root body[data-mode="dark"] & {
      background-color: map-get(c.$colors, main);
      color: map-get(c.$colors, main_2);
      svg {
        fill: map-get(c.$colors, main_2);
      }
      &:hover {
        background-color: map-get(c.$colors, main_2);
        color: map-get(c.$colors, main);
        svg {
          fill: map-get(c.$colors, main);
        }
      }
    }
    @at-root body[data-mode="light"] & {
      background-color: map-get(c.$colors, main);
      color: map-get(c.$colors, main_2);
      &:hover {
        background-color: map-get(c.$colors, sub);
      }
      svg {
        fill: map-get(c.$colors, main_2);
      }
    }
  }
}
